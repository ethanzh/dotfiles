" basics
filetype on
set number
set relativenumber
syntax on
set mouse=a
filetype plugin indent on

" show existing tab with 4 spaces width
set tabstop=4
" when indenting with '>', use 4 spaces width
set shiftwidth=4
" On pressing tab, insert 4 spaces
set expandtab

" Swap ; and :
nnoremap ; :

" language specific indentation
autocmd Filetype haskell setlocal expandtab tabstop=2 shiftwidth=2 softtabstop=2
autocmd FileType javascript setlocal ts=2 sts=2 sw=2
autocmd Filetype c setlocal autoindent cindent expandtab tabstop=2 shiftwidth=2 softtabstop=2

" folding
set foldmethod=indent
set foldlevel=20

" fix backspace behavior
set backspace=indent,eol,start

" toggle tabs
map <TAB> :tabn<CR>
map <S-TAB> :tabp<CR>

" open in new tab
cabbrev t tabnew


" vertical bar at 81st column
highlight ColorColumn ctermbg=grey
call matchadd('ColorColumn', '\%81v', 100)

" highlight search results
set incsearch
set hlsearch
nnoremap <C-l> :nohlsearch<CR><C-l>
hi Search cterm=NONE ctermfg=red ctermbg=blue

" blink search results on n/N
nnoremap <silent> n n:call HLNext(0.1)<cr>
nnoremap <silent> N N:call HLNext(0.1)<cr>
function! HLNext (blinktime)
  let target_pat = '\c\%#'.@/
  let ring = matchadd('ErrorMsg', target_pat, 101)
  redraw
  exec 'sleep ' . float2nr(a:blinktime * 1000) . 'm'
  call matchdelete(ring)
  redraw
endfunction
