" plugin management
silent! if plug#begin('~/.vim/plugged')
Plug 'mhinz/vim-startify' " start screen
Plug 'airblade/vim-gitgutter' " git line changes
Plug 'vim-airline/vim-airline' " buttom line
Plug 'davidhalter/jedi-vim'
call plug#end()
endif

" different behavior based on filetype
filetype on

" add relative line numbers
set number
set relativenumber

" swap ; and :
nnoremap ; :

syntax on

" change leader to ,
let mapleader = ","

" prevent line numbers from being highlighted
set mouse=a

" <insert tabs vs spaces debate here>
filetype plugin indent on
" show existing tab with 4 spaces width
set tabstop=4
" when indenting with '>', use 4 spaces width
set shiftwidth=4
" On pressing tab, insert 4 spaces
set expandtab

" language-specific indentation
autocmd Filetype haskell setlocal expandtab tabstop=2 shiftwidth=2 softtabstop=2
autocmd Filetype c setlocal autoindent cindent expandtab tabstop=2 shiftwidth=2 softtabstop=2

" fix goofy backspace behavior
set backspace=indent,eol,start

" toggle tabs
map <TAB> :tabn<CR>
map <S-TAB> :tabp<CR>

" open in new tab
cabbrev t tabnew

" highlight all results when searching
set incsearch
set hlsearch
nnoremap <C-l> :nohlsearch<CR><C-l>
hi Search cterm=NONE ctermfg=red ctermbg=blue

" vertical column at 81st char
highlight ColorColumn ctermbg=grey
call matchadd('ColorColumn', '\%81v', 100)


" blink search results on n/N
nnoremap <silent> n n:call HLNext(0.1)<cr>
nnoremap <silent> N N:call HLNext(0.1)<cr>
function! HLNext (blinktime)
  let target_pat = '\c\%#'.@/
  let ring = matchadd('ErrorMsg', target_pat, 101)
  redraw
  exec 'sleep ' . float2nr(a:blinktime * 1000) . 'm'
  call matchdelete(ring)
  redraw
endfunction
